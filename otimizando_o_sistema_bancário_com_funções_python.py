# -*- coding: utf-8 -*-
"""Otimizando o Sistema Bancário com Funções Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17ZZHurN4l950RRx8n4_Ddr7tvLhMqvPe
"""

import textwrap

def menu():
    menu = """\n
    ==================== MENU ===================
    [d]\tDepositar
    [s]\tSacar
    [e]\tExtrato
    [nc]\tNova conta
    [lc]\tListar contatos
    [nu]\tNovo usuario
    [q]\tSair
    """
    return input(textwrap.dedent(menu))

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f'Deposito:\tR$ {valor:.2f}\n'
        print('\nOperacao realizado com sucesso!.')
    else:
        print('\nOperacao falhou! O valor informado e invalido.')
    return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques > limite_saques

    if excedeu_saldo:
        print('\nOperacao falhou! Voce nao tem saldo sufuciente.')
    elif excedeu_limite:
        print('\nOperacao falhou! O valor do saque excede o limite.')
    elif excedeu_saques:
        print('\nOperacao falhou! Numero maximo de saques excedido.')
    
    elif valor > 0:
        saldo -= valor
        extrato += f'Saque:\t\tR$ {valor:.2f}\n'
        numero_saques += 1
        print('\nDaque realizado com sucesso!')
    else:
        print('\nOperacao falhou! O valor informado e invalido.')
    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print('\n---------------- EXTRATO ---------------------')
    print('Nao foram realizadas movimentaçoes.' if not extrato else extrato)
    print(f'\nSaldo:\t\tR$ {saldo:.2f}')
    print('------------------------------------------------')

def criar_usuario(usuarios):
    cpf = input('digite o CPF: ')
    usuario = filtrar_usuario(cpf, usuario)

    if usuario:
        print('Ja tem um usuario com esse CPF!')
        return
    
    nome = input('Digite o nome completo: ')
    data_nascimento = input('Digite a data de nascimento: ')
    endereco = input('Digite o endereco completo: ')

    usuarios.append({'nome':nome, 'data_nascimento':data_nascimento, 'cpf':cpf, 'endereco':endereco})
    print('Usuaruio criado com sucesso!')

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usario['cpf'] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('Digite o CPF do usuario: ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('\nConta criada com sucesso!')
        return {'agencia':agencia, 'numero_conta':numero_conta, 'usuario':usuario}
    print('\nUsuario nao encontrado, conta encerrada!')

def listar_conta(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print('-'*100)
        print(textwrap.dedent(linha))

def main():
    LIMITE_SAQUES = 3
    AGENCIA = '0001'

    saldo = 0
    limite = 500
    extrato = ''
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == 'd':
            valor = float(input('Digite o valor do deposito: '))
            saldo, extrato = depositar(saldo, valor, extrato)
        
        elif opcao == 's':
            valor = float(input('Digite o valor do saque: '))
            
            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == 'e':
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == 'nu':
            criar_usuario(usuarios)

        elif opcao == 'nc':
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == 'lc':
            listar_conta(contas)

        elif opcao == 'q':
            break

        else:
            print('Operacao invalida, por favor selecione novamente a opracao desejada.')

main()